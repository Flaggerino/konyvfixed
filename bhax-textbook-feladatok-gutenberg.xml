<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Gutenberg!</title>
        <keywordset>
            <keyword/>
        </keywordset>
        <cover>
            <para>
                Programozás tankönyvek rövid olvasónaplói.
            </para>
        </cover>
    </info>
    <section>
        <title>Programozási alapfogalmak</title>
        <para>         
            <citation>PICI</citation>     
            z emberek folyton modellekben gondolkodnak, főleg problémák megoldása közben.
Ez teljes mértékben igaz a programozásra is, mivel ebben problémákat kell megoldanunk, melyek megoldását nagyban 
elősegíti egy előre felállított modell, működési elv.

A számítógépek processzorai egy előre meghatározott nyelvet felismernek, viszont több magas szintű programnyelv létezik,
ezért az ezen nyelveken írt programokat le kell fordítanunk, erre szolgálnak segítségül a fordító porgramok (gcc, g++ ...stb.)
Ezek a fordítóporgramok lexerrel avagy lexikális elemlzővel felszereltek, melyek a lefordítandó programkódot hivatottak 
ellenőrizni.
Illetve a fellépő hibákat (legyen az szintaktikai, vagy más egyéb) a felhasználó/programozó felé jelezni.

A programnyelveket osztályokba sorolhatjuk , miszerint léteznek :

 - Imperatív nyelvek : algoritmikus nyelv, utasítások sorozata
 - Deklaratív nyelvek: pl.: logikai nyelvek
 - Más nyelvek	     : ide azokat soroljuk, melyek egy imperatív tényezőt/tulajdonságot tagadnak

        </para>
    </section>        
    <section>
        <title>Programozás bevezetés</title>
        <para>                
            <citation>KERNIGHANRITCHIE</citation>
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/zmfT9miB-jY">https://youtu.be/zmfT9miB-jY</link>
        </para>        
    </section>        
    <section>
        <title>Programozás</title>
        <para>                
            <citation>BMECPP</citation>
            Minden programkód, karakterekből áll elő, ezek egy adott karakterkészletből érhetőek el, minden nyelv definiálja a sajátját. 
(betűk , számjegyek, stb..)
Ily módon épülnek fel a lexikális -, a szintaktikai -, a program -, a fordítási egységek, az utasítások, illetve maga a program.
A programkódon belüli lexikális egységek, melyeket a fordítóprogram tokenizál a következőek : Többkarakteres szimbólum, szimbolikus
név, címke, megjegyzés, literál.

A szimbolikus neveken belül találkozhatunk az azonosítóval, melynek kötelezően betűvel kell kezdődnie, majd betűvel vagy számmal 
folytatódnia.
Programozói eszközök megnevezésére szolgál, majd a későbbiekben az ezekre való hivatkozást is megkönnyíti.
Találkozhatunk még a programnyelvekben kulcsszavakkal, melyeknek az adott nyelv tulajdonít jelentést, tehát azonosítói szempontból 
kötöttek.
Általában utasítások elnevezései.
Léteznek még standard azonosítók, melyeknek szintén az adott programnyelv tualjdonít jelentést a kulcsszavakhoz hasonló módon, 
ezt a programozó átnevezheti, átértelmezheti (C-ben ilyen például a NULL).


A programkódok egy hasznos egységét képezik a megjegyzések, kommentek.
Ezek segítik a programozónak egy adott szegmens műkődési elvének leírását, ha esetleg hosszabb a kód és a későbbiekben 
vissza kell térni rá, de már a programozó nem teljesen emlékszik rá.
Problémák feljegyzése adott szegmensekkel kapcsolatban.
A kommentek szinte bármilyen nagyságúak lehetnek, nem befolyásolják a program működését.
        </para>
    </section>        
</chapter>                
